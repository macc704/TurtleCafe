<?xml version="1.0" encoding="UTF-8"?>
<doc xml:lang="ja">
<head>
<title>たくさんのタートル</title>
</head>
<body>
<section title="学習目標">
<ul>
<li>オブジェクトの作成と命令を行うことができる</li>
<li>複数のオブジェクトを区別して命令を行うことができる</li>
</ul>
</section>
<section title="複数のタートルを使う">
<p>
				オブジェクトタートル編では、いままで習った制御構造を利用して、簡単なゲームやアニメーションなどのアプリケーションを作っていきたいと思います。
			</p>
<p>
				アニメーションでは、「オブジェクト」と呼ばれるものを生成して、
				そのオブジェクトに対して命令をすることになります。
				その練習のために、まず、複数のタートルを扱ってみましょう。
			</p>
<subsection title="2匹のタートルを使うプログラム">
<p>次のプログラムを見てみましょう。</p>
<program title="TwoTurtles.java" id="src:TwoTurtles" src="src/TwoTurtles.java" javasrcSyntaxHilight="true" normalizer="line, javasrc" encoding="Shift_JIS"/>
<p>
<a href="chapter07/src/TwoTurtles.java">
        		ここ
			</a>
			をクリックすると、プログラムをダウンロードできます。
		</p>
<p>
			下のボタンを押すと、TwoTurtlesプログラムが実行できます。
		</p>
<native format="html4"><![CDATA[
<applet code="TurtleLaunchApplet" archive="chapter07_binary.jar,blib.jar" width="200" height="38">
<param name="Turtle" value="TwoTurtles"/>
</applet>]]></native>
<figure title="2匹のタートルを使うプログラム" src="image/twoturtles" style="scale:1.0"/>
</subsection>
<subsection title="タートル（オブジェクト）の生成">
<p>
					タートル（オブジェクト）を一匹生成するには、次のような命令文を書きます。
				</p>
<figure title="タートル(オブジェクト)の生成" src="image/newturtle" style="scale:1.0"/>
</subsection>
<subsection title="タートル(オブジェクト)への命令">
<p>
					生成されたタートル（オブジェクト）に命令するには、次のような命令文を書きます。
				</p>
<figure title="タートル(オブジェクト)への命令" src="image/objectcommand" style="scale:1.0"/>
</subsection>
<p>
				このように、オブジェクトを生成して、
				生成したオブジェクトに対して命令を行う手法を「オブジェクト指向プログラミング」といい、
				現在のプログラミングでよく使われる手法です。
			</p>
</section>
<section title="同時に動いているように見せるために">
<p>
					オブジェクトはいくつでも生成することができます。
					次のプログラムを見てみましょう。
				</p>
<program title="FourTurtles.java" id="src:FourTurtles" src="src/FourTurtles.java" javasrcSyntaxHilight="true" normalizer="line, javasrc" encoding="Shift_JIS"/>
<p>
<a href="chapter07/src/FourTurtles.java">
        		ここ
			</a>
			をクリックすると、プログラムをダウンロードできます。
		</p>
<p>
			下のボタンを押すと、FourTurtlesプログラムが実行できます。
		</p>
<native format="html4"><![CDATA[
<applet code="TurtleLaunchApplet" archive="chapter07_binary.jar,blib.jar" width="200" height="38">
<param name="Turtle" value="FourTurtles"/>
</applet>]]></native>
<p>
					このプログラムを下のプログラムと比較してみましょう。
					（同じ図形を書くのですが、動きが異なるはずです。）
				</p>
<program title="FourTurtles2.java" id="src:FourTurtles2" src="src/FourTurtles2.java" javasrcSyntaxHilight="true" normalizer="line, javasrc" encoding="Shift_JIS"/>
<p>
<a href="chapter07/src/FourTurtles2.java">
        		ここ
			</a>
			をクリックすると、プログラムをダウンロードできます。
		</p>
<p>
			下のボタンを押すと、FourTurtles2プログラムが実行できます。
		</p>
<native format="html4"><![CDATA[
<applet code="TurtleLaunchApplet" archive="chapter07_binary.jar,blib.jar" width="200" height="38">
<param name="Turtle" value="FourTurtles2"/>
</applet>]]></native>
<figure title="4匹のタートルを使うプログラム(1)" src="image/fourturtles1" style="scale:1.0"/>
<figure title="4匹のタートルを使うプログラム(2)" src="image/fourturtles2" style="scale:1.0"/>
<fyi title="コンピュータは同時に2度の命令をできない">
<p>
						2つ目のプログラムでは、タートルを細かく切り替えて少しずつ動かすことによって、
						4匹のタートルが同時に動いているように見せることができます。
					</p>
<p>コンピュータは2つの仕事を同時に行うことはできません。
					みなさんが使っているパソコンは、インターネットをやっている間にメールを見て、印刷しながらワープロも使ったりすることができます。
					これは、実は、このタートルの例のように、細かく切り替えていろいろな仕事を少しずつしているからなのです。
					</p>
</fyi>
</section>
<section title="練習問題">
<subsection title="問題1：たくさんのタートルで絵を描こう">
<p>
				今まで描いた絵を、何匹かのタートルを使って、タートルの共同作業で描いてみよう。
				そのときに、全てのタートルが同時に働いているように見せよう。
				余裕があったら、仕事の遅いタートルや、仕事の速いタートルを作ることはできるか、考えてみよう。
			</p>
</subsection>
</section>
</body>
</doc>
